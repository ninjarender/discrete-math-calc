<h1>Introduction to Object-Oriented Programming. Encapsulation. Inheritance. Modifiers</h1>
<%= link_to "Back to Java Examinator", java_examinator_path %>

<h2>Exercise 1</h2>
<pre><code class="java">
class Parallelogram {
    protected double a, b, angle;

    public Parallelogram(double a, double b, double angle) {
        this.a = a;
        this.b = b;
        this.angle = angle;
    }

    public double perimeter() {
        return 2 * (a + b);
    }

    public double area() {
        return a * b * Math.sin(Math.toRadians(angle));
    }
}

class Rectangle extends Parallelogram {
    public Rectangle(double a, double b) {
        super(a, b, 90);
    }
}

class Rhombus extends Parallelogram {
    public Rhombus(double a, double angle) {
        super(a, a, angle);
    }
}

class Square extends Rectangle {
    public Square(double a) {
        super(a, a);
    }
}

class Solution {
    public static void main(String[] args) {
        try (java.util.Scanner sc = new java.util.Scanner(System.in)) {
            double a = sc.nextDouble();
            double b = sc.nextDouble();
            double alpha = sc.nextDouble();

            Parallelogram[] shapes = new Parallelogram[4];
            shapes[0] = new Parallelogram(a, b, alpha);
            shapes[1] = new Rectangle(a, b);
            shapes[2] = new Rhombus(a, alpha);
            shapes[3] = new Square(a);

            double totalPerimeter = 0;
            double totalArea = 0;

            for (Parallelogram shape : shapes) {
                totalPerimeter += shape.perimeter();
                totalArea += shape.area();
            }

            System.out.printf("%.3f %.3f", totalPerimeter, totalArea);
        }
    }
}
</code></pre>
<p>My mark: <b>100%</b></p>

<h2>Exercise 2</h2>
<pre><code class="java">
class Pair {
    private final int a;
    private final int b;

    public Pair(int a, int b) {
        this.a = a;
        this.b = b;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!(obj instanceof Pair)) return false;
        Pair other = (Pair) obj;

        return (this.a == other.a && this.b == other.b) ||
               (this.a == other.b && this.b == other.a);
    }
}

class ColoredPair extends Pair {
    private final String color;

    public ColoredPair(int a, int b, String color) {
        super(a, b);
        this.color = color;
    }
}
</code></pre>
<p>My mark: <b>100%</b></p>